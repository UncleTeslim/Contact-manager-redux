{"version":3,"sources":["actions/contactActions.js","components/contacts/Contact.js","actions/types.js","components/contacts/Contacts.js","components/contacts/AddContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["url","Contact","state","showContactInfo","onDeleteClick","id","props","deleteContact","this","contact","name","email","phone","className","onClick","setState","style","cursor","float","color","bind","Component","connect","dispatch","a","axios","delete","type","payload","Contacts","getContacts","contacts","Fragment","map","key","get","res","data","addContact","post","useState","inputContact","setInputContact","handleChange","e","targetValue","target","value","targetName","onSubmit","preventDefault","newContact","history","push","handleSubmit","htmlFor","placeholder","onChange","required","Header","branding","href","to","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","exact","path","component","AddContact","About","NotFound","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8b80e4ae.chunk.js","sourcesContent":["import { GET_CONTACTS, DELETE_CONTACT, ADD_CONTACT } from './types';\r\nimport axios from 'axios';\r\n\r\n\r\nlet url = 'https://jsonplaceholder.typicode.com/users';\r\n\r\nexport const getContacts = () => async dispatch => {\r\n  const res = await axios.get(url);\r\n  dispatch ({\r\n    type: GET_CONTACTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  await axios.delete(url+'/'+id);\r\n  dispatch ({\r\n    type: DELETE_CONTACT,\r\n    payload:id\r\n  });\r\n};\r\n\r\nexport const addContact = contact => async dispatch => {\r\n  const res =  await axios.post(url, contact)\r\n  dispatch({\r\n    type: ADD_CONTACT,\r\n    payload: res.data\r\n  });\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../actions/contactActions'\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = id => {\r\n    this.props.deleteContact(id);\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <div className=\"card card-body mb-3\">\r\n        <h4>\r\n          {name}{' '}\r\n          <i\r\n            onClick={() =>\r\n              this.setState({\r\n                showContactInfo: !this.state.showContactInfo\r\n              })\r\n            }\r\n            className=\"fas fa-sort-down\"\r\n            style={{ cursor: 'pointer' }}\r\n          />\r\n          <i\r\n            className=\"fas fa-times\"\r\n            style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n            onClick={this.onDeleteClick.bind(this, id)}\r\n          />\r\n         \r\n        </h4>\r\n        {showContactInfo ? (\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">Email: {email}</li>\r\n            <li className=\"list-group-item\">Phone: {phone}</li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  deleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteContact }) (Contact);\r\n","export const GET_CONTACTS = 'GET_CONTACTS';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACTS';\r\nexport const ADD_CONTACT = 'ADD_CONTACTS';","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getContacts } from '../../actions/contactActions';\r\n\r\n\r\nclass Contacts extends Component {\r\n \r\n  componentDidMount() {\r\n    this.props.getContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        {contacts.map(contact => (\r\n          <Contact key={contact.id} contact={contact} />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  getContacts: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contact.contacts\r\n});\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   getContacts: () => dispatch({ type: GET_CONTACTS })\r\n// });\r\n\r\nexport default connect(mapStateToProps,{getContacts})( Contacts );\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../actions/contactActions'\r\n\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import axios from 'axios'\r\n\r\n\r\nconst AddContact = (props) => {\r\n\r\n  const [inputContact, setInputContact] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n  });\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const targetValue = e.target.value;\r\n    const targetName = e.target.name;\r\n    setInputContact(() => ({ ...inputContact, [targetName]: targetValue }));\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = inputContact;\r\n\r\n    const newContact = {\r\n      // id: uuidv4(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n      props.addContact(newContact);\r\n\r\n    setInputContact({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n    })\r\n    props.history.push('/');\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-header\">\r\n        Add Contact\r\n            </div>\r\n      <div className=\"card-body\">\r\n        <form onSubmit={(e) => handleSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Input Your Name...\"\r\n              value={inputContact.name}\r\n              onChange={(e) => handleChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Input Your Email..\"\r\n              value={inputContact.email}\r\n              onChange={(e) => handleChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phone\">Phone Number</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"phone\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Input Your Phone Number...\"\r\n              value={inputContact.phone}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" value=\"Add Contact\" className=\"btn btn btn-secondary\" />\r\n\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nAddContact.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, {addContact}) (AddContact);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add Contact\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\r\n        magna aliqua. Cursus sit amet dictum sit. Non diam phasellus vestibulum lorem sed risus ultricies. Massa vitae\r\n        tortor. Dignissim suspendisse in est ante in nibh mauris. Egestas egestas fringilla phasellus faucibus scelerisque\r\n        eleifend donec. Ac feugiat sed lectus vestibulum mattis ullamcorper velit. Amet nisl purus in mollis nunc sed id\r\n        semper. Interdum consectetur libero id faucibus nisl. Tellus molestie nunc non blandit massa.\r\n      </p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import {GET_CONTACTS, DELETE_CONTACT, ADD_CONTACT} from '../actions/types';\r\n\r\nconst initialState = {\r\n  contacts: []\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport contactReducer from './contactReducer';\r\n\r\n\r\nexport default combineReducers({\r\n  contact: contactReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [ thunk ];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  ));\r\n\r\n  export default store;\r\n \r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}